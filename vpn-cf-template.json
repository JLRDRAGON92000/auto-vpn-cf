{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Mappings": {
        "RegionMap": {
            "eu-west-1": {"HVM64": "ami-02df9ea15c1778c9c"},
            "us-east-1": {"HVM64": "ami-04b9e92b5572fa0d1"},
            "us-east-2": {"HVM64": "ami-0d5d9d301c853a04a"},
            "us-west-1": {"HVM64": "ami-0dd655843c87b6930"},
            "us-west-2": {"HVM64": "ami-06d51e91cea0dac8d"}
        }
    },
    "Parameters": {
        "VpcCidrBlock": {
            "Description": "CIDR range of private IP addresses to assign within the VPC.",
            "Default": "10.100.100.0/24",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be in the form of an IPv4 CIDR block (n.n.n.n/n)."
        },
        "InstanceType": {
            "Description": "Instance type of the VPN server. Larger instances are more powerful with higher network performance, but are more expensive.",
            "Default": "t3.small",
            "Type": "String",
            "ConstraintDescription": "Must be a valid EC2 x86 instance type."
        },
        "KeyName": {
            "Description": "A key pair to allow SSH access to the VPN server.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be a pre-existing key pair."
        },
        "AllowedClientIpRange": {
            "Description": "CIDR range of IP addresses permitted to access the VPN server. Restricting this will inhibit use of the VPN while mobile.",
            "Default": "0.0.0.0/0",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be in the form of an IPv4 CIDR block (n.n.n.n/n)."
        },
        "OpenvpnUserPassword": {
            "Description": "Password for the OpenVPN AS administrator. You will use the username \"openvpn\" and this password to log on to the web interface.",
            "NoEcho": true,
            "Type": "String",
            "ConstraintDescription": "Make sure to choose a strong password, as your VPN server is accessible from the Internet."
        }
    },
    "Resources": {
        "AutoVpnVpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {"Ref": "VpcCidrBlock"},
                "Tags": [
                    {"Key": "Name", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "vpc"]]}}
                ]
            },
            "Metadata": {}
        },
        "AutoVpnPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {"Ref": "AutoVpnVpc"},
                "CidrBlock": {"Ref": "VpcCidrBlock"},
                "Tags": [
                    {"Key": "Name", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "subnet"]]}}
                ]
            }
        },
        "AutoVpnRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "AutoVpnVpc"}
            }
        },
        "AutoVpnRouteExternal": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {"Ref": "AutoVpnRouteTable"},
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {"Ref": "AutoVpnIgw"}
            }
        },
        "AutoVpnRouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {"Ref": "AutoVpnRouteTable"},
                "SubnetId": {"Ref": "AutoVpnPublicSubnet"}
            }
        },
        "AutoVpnIgw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {"Key": "Name", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "igw"]]}}
                ]
            }
        },
        "AutoVpnIgwAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {"Ref": "AutoVpnVpc"},
                "InternetGatewayId": {"Ref": "AutoVpnIgw"}
            }
        },
        "AutoVpnInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {"Ref": "KeyName"},
                "InstanceType": {"Ref": "InstanceType"},
                "ImageId": {"Fn::FindInMap": ["RegionMap", {"Ref": "AWS::Region"}, "HVM64"]},
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": 0,
                        "NetworkInterfaceId": {"Ref": "AutoVpnNetworkInterface"}
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": 20,
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "Tags": [
                    {"Key": "Name", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "vpn-server"]]}}
                ],
                "UserData": {"Fn::Base64": {"Fn::Join": ["", [
                    "#!/usr/bin/env bash\n",
                    "INSTALL_LOCATION='/usr/local/openvpn_as'\n",
                    "apt-get -y update && apt-get -y install ca-certificates wget net-tools sqlite3\n",
                    "wget -qO - https://as-repository.openvpn.net/as-repo-public.gpg | apt-key add -\n",
                    "add-apt-repository -y 'deb http://as-repository.openvpn.net/as/debian bionic main'\n",
                    "apt-get -y install openvpn-as\n",
                    "systemctl stop openvpnas.service\n",
                    "chpasswd <<EOF\n",
                    {"Fn::Sub": "openvpn:${OpenvpnUserPassword}\n"},
                    "EOF\n",
                    "if [ -f \"$INSTALL_LOCATION/etc/db/config_local.db\" ]; then\n",
                    "    CONFIG_DB=\"$INSTALL_LOCATION/etc/db/config_local.db\"\n",
                    "elif [ -f \"$INSTALL_LOCATION/etc/db/config.db\" ]; then\n",
                    "    CONFIG_DB=\"$INSTALL_LOCATION/etc/db/config.db\"\n",
                    "fi\n",
                    "if [ -n \"$CONFIG_DB\" ]; then\n",
                    "    sqlite3 \"$CONFIG_DB\" 'update config set value = \"",
                    {"Ref": "AutoVpnElasticIp"},
                    "\" where profile_id = 1 and name = \"host.name\";'\n",
                    "else\n",
                    "    echo 'Could not find either config.db or config_local.db.' >&2\n",
                    "    echo \"Ensure OpenVPN AS is installed in $INSTALL_LOCATION.\" >&2\n",
                    "    exit 1\n",
                    "fi\n",
                    "systemctl start openvpnas.service\n"
                ]]}}
            },
            "Metadata": {}
        },
        "AutoVpnNetworkInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {"Ref": "AutoVpnPublicSubnet"},
                "GroupSet": [
                    {"Ref": "AutoVpnSecurityGroup"}
                ]
            },
            "DependsOn": "AutoVpnIgwAttachment"
        },
        "AutoVpnSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {"Ref": "AutoVpnVpc"},
                "GroupName": {
                    "Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "vpn-sec-group"]]
                },
                "GroupDescription": "Security group for the VPN server.",
                "SecurityGroupIngress": [
                    {
                        "Description": "OpenVPN UDP port",
                        "IpProtocol": "udp",
                        "FromPort": "1194",
                        "ToPort": "1194",
                        "CidrIp": {"Ref": "AllowedClientIpRange"}
                    },
                    {
                        "Description": "SSH management port",
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {"Ref": "AllowedClientIpRange"}
                    },
                    {
                        "Description": "OpenVPN TCP / HTTPS management port",
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {"Ref": "AllowedClientIpRange"}
                    },
                    {
                        "Description": "Alternative HTTPS management port",
                        "IpProtocol": "tcp",
                        "FromPort": "943",
                        "ToPort": "943",
                        "CidrIp": {"Ref": "AllowedClientIpRange"}
                    }
                ]
            },
            "Metadata": {}
        },
        "AutoVpnElasticIp": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {"Key": "Name", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "eip"]]}}
                ]
            },
            "Metadata": {}
        },
        "AutoVpnEipAssoc": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {"Fn::GetAtt": ["AutoVpnElasticIp", "AllocationId"]},
                "NetworkInterfaceId": {"Ref": "AutoVpnNetworkInterface"}
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {"default": "VPC and Networking Configuration"},
                    "Parameters": ["VpcCidrBlock", "AllowedClientIpRange"]
                },
                {
                    "Label": {"default": "VPN Server Instance Configuration"},
                    "Parameters": ["InstanceType", "KeyName"]
                },
                {
                    "Label": {"default": "OpenVPN Access Server Configuration"},
                    "Parameters": ["OpenvpnUserPassword"]
                }
            ],
            "ParameterLabels": {
                "VpcCidrBlock": {"default": "VPC CIDR Block"},
                "AllowedClientIpRange": {"default": "Allowed Client IP Range"},
                "InstanceType": {"default": "Instance Type"},
                "KeyName": {"default": "Key Pair"},
                "OpenvpnUserPassword": {"default": "OpenVPN User Password"}
            }
        }
    }
}

